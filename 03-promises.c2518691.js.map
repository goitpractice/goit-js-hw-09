{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,QAC9BC,EAAW,GAgCjB,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACTH,EACIF,EAAQ,C,SAAEH,E,MAAUC,IACpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAC9BA,EAAM,G,CAtCbN,EAAKc,iBAAiB,UAAUC,IAC9B,MAAMC,KAAEA,EAAIC,OAAEA,EAAMX,MAAEA,EAAKY,SAAEA,GAAaH,EAAGI,OAAOC,SAEpDL,EAAGM,iBAEHH,EAASI,UAAW,EAEpB,MAAMC,GAAUP,EAAKQ,MACfC,GAAWnB,EAAMkB,MAEvB,IAAK,IAAIE,EAAI,EAAGA,GAAKT,EAAOO,MAAOE,IACjCvB,EAASwB,KACPvB,EAAcsB,EAAGA,EAAIH,EAASE,GAC3BG,MAAK,EAACvB,SAAEA,EAAQC,MAAEA,MACjBuB,QAAQC,IAAI,uBAAuBzB,QAAeC,OAClDR,EAAAiC,OAAOC,QAAQ,uBAAuB3B,QAAeC,MAAU,IAEhE2B,OAAM,EAAC5B,SAAEA,EAAQC,MAAEA,MAClBuB,QAAQC,IAAI,sBAAsBzB,QAAeC,OACjDR,EAAAiC,OAAOG,QAAQ,sBAAsB7B,QAAeC,MAAU,KAKtEC,QAAQ4B,WAAWhC,GAAUyB,MAAK,KAChCV,EAASI,UAAW,EACpBnB,EAASiC,OAAS,CAAC,GACnB","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('form');\nconst promises = [];\n\nform.addEventListener('submit', ev => {\n  const { step, amount, delay, controls } = ev.target.elements;\n\n  ev.preventDefault();\n\n  controls.disabled = true; // avoid multiple simultaneous promises creation\n\n  const stepMs = +step.value;\n  const delayMs = +delay.value;\n\n  for (let i = 1; i <= amount.value; i++) {\n    promises.push(\n      createPromise(i, i * stepMs + delayMs)\n        .then(({ position, delay }) => {\n          console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n          Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        })\n    );\n  }\n\n  Promise.allSettled(promises).then(() => {\n    controls.disabled = false;\n    promises.length = 0;\n  });\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      shouldResolve\n        ? resolve({ position, delay })\n        : reject({ position, delay });\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$promises","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","ev","step","amount","controls","target","elements","preventDefault","disabled","stepMs","value","delayMs","i","push","then","console","log","Notify","success","catch","failure","allSettled","length"],"version":3,"file":"03-promises.c2518691.js.map"}