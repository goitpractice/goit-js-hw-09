{"mappings":"YAAe,SAAAA,EAA2BC,EAAKC,IAClC,MAAPA,GAAeA,EAAMD,EAAIE,UAAQD,EAAMD,EAAIE,QAC/C,IAAK,IAAIC,EAAI,EAAGC,EAAO,IAAIC,MAAMJ,GAAME,EAAIF,EAAKE,IAAKC,EAAKD,GAAKH,EAAIG,GACnE,OAAOC,C,CCGT,IAAIE,ECDmCN,EAAKG,EDGhBI,GCHWP,EDGXQ,SAASC,iBAAiB,UCHVN,EDGmB,EERhD,SAAyBH,GACtC,GAAIK,MAAMK,QAAQV,GAAM,OAAOA,C,CDKxB,CAAeA,IENT,SAA0BW,GACvC,GAAsB,oBAAXC,QAAmD,MAAzBD,EAAKC,OAAOC,WAA2C,MAAtBF,EAAK,cAAuB,OAAON,MAAMS,KAAKH,E,CFKtF,CAAqBX,IGJtC,SAAqCe,EAAGC,GACrD,GAAKD,EAAL,CACA,GAAiB,iBAANA,EAAgB,OAAOhB,EAAkBgB,EAAGC,GACvD,IAAIC,EAAIC,OAAOC,UAAUC,SAASC,KAAKN,GAAGO,MAAM,GAAG,GAEnD,MADU,WAANL,GAAkBF,EAAEQ,cAAaN,EAAIF,EAAEQ,YAAYC,MAC7C,QAANP,GAAqB,QAANA,EAAoBZ,MAAMS,KAAKG,GACxC,cAANA,GAAqB,2CAA2CQ,KAAKR,GAChElB,EAAkBgB,EAAGC,QAD9B,CALQ,C,CHGsD,CAA2BhB,EAAKG,IINjF,WACb,MAAM,IAAIuB,UAAU,6I,CJKgF,IDE/FC,EAAqBpB,EAAmC,GAA9CqB,EAAWrB,EAAmC,GAE/DC,SAASqB,KAAKC,iBAAiB,SAAS,SAAAC,GAClC,UAAWA,EAAGC,OAAOC,UAczB3B,EAAiB4B,aACf,W,OACE1B,SAASqB,KAAKM,aACZ,QACA,qBAAyCC,OAWxC,IAAsDA,OAAlDC,KAAKC,MAAsB,SAAhBD,KAAKE,UAAqBnB,SAAS,KAXV,K,GAtBxB,KAMrBO,EAASa,UAAW,EACpBZ,EAAQY,UAAW,GAGjB,SAAUT,EAAGC,OAAOC,UAmBxBQ,cAAcnC,GAjBZqB,EAASa,UAAW,EACpBZ,EAAQY,UAAW,E","sources":["node_modules/@swc/helpers/src/_array_like_to_array.mjs","src/js/01-color-switcher.js","node_modules/@swc/helpers/src/_sliced_to_array.mjs","node_modules/@swc/helpers/src/_array_with_holes.mjs","node_modules/@swc/helpers/src/_iterable_to_array.mjs","node_modules/@swc/helpers/src/_unsupported_iterable_to_array.mjs","node_modules/@swc/helpers/src/_non_iterable_rest.mjs"],"sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\n","/*\nНапиши скрипт, який після натискання кнопки «Start», \nраз на секунду змінює колір фону <body> на випадкове значення, використовуючи інлайн стиль.\nНатисканням на кнопку «Stop» зміна кольору фону повинна зупинятися.\n*/\n\nlet activeInterval;\nconst changeIntervalMs = 1000;\nconst [startBtn, stopBtn] = document.querySelectorAll('button');\n\ndocument.body.addEventListener('click', ev => {\n  if ('start' in ev.target.dataset) {\n    startColorChange();\n    startBtn.disabled = true;\n    stopBtn.disabled = false;\n  }\n\n  if ('stop' in ev.target.dataset) {\n    stopColorChange();\n    startBtn.disabled = false;\n    stopBtn.disabled = true;\n  }\n});\n\nfunction startColorChange() {\n  activeInterval = setInterval(\n    () =>\n      document.body.setAttribute(\n        'style',\n        `background-color: ${getRandomHexColor()};`\n      ),\n    changeIntervalMs\n  );\n}\n\nfunction stopColorChange() {\n  clearInterval(activeInterval);\n}\n\nfunction getRandomHexColor() {\n  return `#${Math.floor(Math.random() * 16777215).toString(16)}`;\n}\n","import arrayWithHoles from './_array_with_holes.mjs';\nimport iterableToArrayLimit from './_iterable_to_array.mjs';\nimport nonIterableRest from './_non_iterable_rest.mjs';\nimport unsupportedIterableToArray from './_unsupported_iterable_to_array.mjs';\n\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n","import _arrayLikeToArray from './_array_like_to_array.mjs';\n\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))\n    return _arrayLikeToArray(o, minLen);\n}\n","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n"],"names":["$27d8e5d3c1ab4d36$export$2e2bcd8739ae039","arr","len","length","i","arr2","Array","$2ec2bf6e450c0fe9$var$activeInterval","$2ec2bf6e450c0fe9$var$ref","document","querySelectorAll","isArray","iter","Symbol","iterator","from","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","TypeError","$2ec2bf6e450c0fe9$var$startBtn","$2ec2bf6e450c0fe9$var$stopBtn","body","addEventListener","ev","target","dataset","setInterval","setAttribute","concat","Math","floor","random","disabled","clearInterval"],"version":3,"file":"01-color-switcher.6f850b5c.js.map"}