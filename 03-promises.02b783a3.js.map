{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,QAC9BC,EAAW,GAgCjB,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACTH,EACIF,EAAQ,CAAEH,WAAUC,UACpBG,EAAO,CAAEJ,WAAUC,S,GACtBA,E,IAtCPN,EAAKc,iBAAiB,UAAU,SAAAC,GAC9B,IAAwCC,EAAAD,EAAGE,OAAOC,SAA1CC,EAAgCH,EAAhCG,KAAMC,EAA0BJ,EAA1BI,OAAQd,EAAkBU,EAAlBV,MAAOe,EAAWL,EAAXK,OAE7BN,EAAGO,iBAEHD,EAAOE,UAAW,EAKlB,IAHA,IAAMC,GAAUL,EAAKM,MACfC,GAAWpB,EAAMmB,MAEdE,EAAI,EAAGA,GAAKP,EAAOK,MAAOE,IACjCxB,EAASyB,KACPxB,EAAcuB,EAAGA,EAAIH,EAASE,GAC3BG,MAAK,SAAAC,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MACjByB,QAAQC,IAAI,uBAAsCC,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,OACxDR,EAAAoC,OAAOC,QAAQ,uBAAsCF,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,M,IAE5D8B,OAAM,SAAAN,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MAClByB,QAAQC,IAAI,sBAAqCC,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,OACvDR,EAAAoC,OAAOG,QAAQ,sBAAqCJ,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,M,KAKlEC,QAAQ+B,WAAWnC,GAAU0B,MAAK,WAChCR,EAAOE,UAAW,EAClBpB,EAASoC,OAAS,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('form');\nconst promises = [];\n\nform.addEventListener('submit', ev => {\n  const { step, amount, delay, submit } = ev.target.elements;\n\n  ev.preventDefault();\n\n  submit.disabled = true; // avoid unexpected multiple promises creatin\n\n  const stepMs = +step.value;\n  const delayMs = +delay.value;\n\n  for (let i = 1; i <= amount.value; i++) {\n    promises.push(\n      createPromise(i, i * stepMs + delayMs)\n        .then(({ position, delay }) => {\n          console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n          Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        })\n    );\n  }\n\n  Promise.allSettled(promises).then(() => {\n    submit.disabled = false;\n    promises.length = 0;\n  });\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      shouldResolve\n        ? resolve({ position, delay })\n        : reject({ position, delay });\n    }, delay);\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$promises","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","ev","_elements","target","elements","step","amount","submit","preventDefault","disabled","stepMs","value","delayMs","i","push","then","param","console","log","concat","Notify","success","catch","failure","allSettled","length"],"version":3,"file":"03-promises.02b783a3.js.map"}